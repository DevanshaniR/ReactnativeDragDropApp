{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["itemList","App","state","getList","droppableId","console","log","filtered_item","find","tappedItem","draggable_id","getIndex","findIndex","onDragEnd","result","source","destination","state_item_list","result_index","result_items","reorder","index","setState","result_source_index","result_dest_index","result_m","move","undefined","dest","e","list","startIndex","endIndex","row_items","Array","from","result_old","result_new","new_obj","droppableSource","droppableDestination","sourceClone","destClone","first_item","second_item","source_new_obj","dest_new_obj","this","map","item","direction","provided","snapshot","ref","innerRef","style","getFirstListStyle","isDraggingOver","droppableProps","item_row","draggableId","id","draggableProps","dragHandleProps","getItemStyle","isDragging","name","React","Component","background","display","padding","width","draggableStyle","borderRadius","height","grid","marginRight","background_color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6cafea0.chunk.js","sourcesContent":["import React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst itemList = [\n  {\n    \"draggable_id\": \"draggable_1\",\n    \"row_items\": [\n      {\n        \"id\": \"1\",\n        \"name\": \"Bill\",\n        \"background_color\": \"red\"\n      },\n      {\n        \"id\": \"2\",\n        \"name\": \"mobile\",\n        \"background_color\": \"pink\"\n      },\n      {\n        \"id\": \"3\",\n        \"name\": \"HBB\",\n        \"background_color\": \"orange\"\n      },\n      {\n        \"id\": \"4\",\n        \"name\": \"DTV\",\n        \"background_color\": \"#aaaaff\"\n      }\n    ]\n  },\n  {\n    \"draggable_id\": \"draggable_2\",\n    \"row_items\": [\n      {\n        \"id\": \"13\",\n        \"name\": \"trans history\",\n        \"background_color\": \"#ffaaff\"\n      },\n      {\n        \"id\": \"14\",\n        \"name\": \"my doctor\",\n        \"background_color\": \"purple\"\n      },\n      {\n        \"id\": \"15\",\n        \"name\": \"Reload\",\n        \"background_color\": \"cyan\"\n      },\n      {\n        \"id\": \"16\",\n        \"name\": \"Stock\",\n        \"background_color\": \"yellow\"\n      }\n    ]\n  }\n];\n\nclass App extends React.Component {\n  state = {\n    itemList: itemList\n  };\n\n  getList = (droppableId) => {\n    console.log('getList ::droppableId', droppableId);\n    let item_list = this.state.itemList;\n    let filtered_item = item_list.find(tappedItem => tappedItem.draggable_id == droppableId);\n    console.log('getList :: filtered_item', filtered_item);\n    return filtered_item;\n  }\n\n\n  getIndex = (droppableId) => {\n    console.log('getIndex ::droppableId', droppableId);\n    let item_list = this.state.itemList;\n    let findIndex = item_list.findIndex(tappedItem => tappedItem.draggable_id == droppableId);\n    console.log('getIndex :: findIndex', findIndex);\n    return findIndex;\n  }\n  onDragEnd = (result) => {\n    try {\n      const { source, destination } = result;\n      console.log('onDragEnd :: droppableId', result);\n      // dropped outside the list\n      if (!destination) {\n        return;\n      }\n      console.log('onDragEnd :: getList 1', this.state.itemList);\n      let state_item_list = this.state.itemList;\n\n      if (source.droppableId === destination.droppableId) {\n        let result_index = this.getIndex(source.droppableId);\n        console.log('onDragEnd :: getList', this.getList(source.droppableId));\n        let result_items = this.reorder(this.getList(source.droppableId), source.index, destination.index);\n        console.log('onDragEnd :: result_items', result_items);\n        state_item_list[result_index] = result_items;\n\n        this.setState({ itemList: state_item_list });\n      } else {\n        let result_source_index = this.getIndex(source.droppableId);\n        let result_dest_index = this.getIndex(destination.droppableId);\n        let result_m = this.move(this.getList(source.droppableId), this.getList(destination.droppableId), source, destination);\n        if (result_m == undefined || result_m.source == undefined || result_m.dest == undefined) {\n          return;\n        }\n        state_item_list[result_source_index] = result_m.source;\n        state_item_list[result_dest_index] = result_m.dest;\n        this.setState({ itemList: state_item_list });\n      }\n    } catch (e) {\n      console.log('onDragEnd ::  exception', e);\n    }\n  }\n\n  reorder = (list, startIndex, endIndex) => {\n    console.log('reorder', list.row_items, startIndex, endIndex);\n    let result = Array.from(list.row_items);\n    let result_old = result[startIndex];\n    let result_new = result[endIndex];\n    result[startIndex] = result_new;\n    result[endIndex] = result_old;\n    console.log('reorder :: result', result);\n    let new_obj = { ...list, row_items: result };\n    console.log('reorder :: new_obj', new_obj);\n    return new_obj;\n  }\n\n  /**\n * Moves an item from one list to another list.\n */\n  move = (source, destination, droppableSource, droppableDestination) => {\n    try {\n      const { row_items } = source;\n      let result = {};\n\n      console.log('move :: source :: destination', source, destination);\n      console.log('move :: droppableSource :: droppableSource', droppableSource, droppableDestination);\n      let sourceClone = Array.from(row_items);\n      let destClone = Array.from(destination.row_items);\n      let first_item = sourceClone[droppableSource.index];\n      let second_item = destClone[droppableDestination.index];\n      console.log('move :: first_item', first_item);\n      console.log('move :: second_item', second_item);\n      if (first_item == undefined || second_item == undefined) {\n        return;\n      }\n      sourceClone[droppableSource.index] = second_item;\n      destClone[droppableDestination.index] = first_item;\n      let source_new_obj = { ...source, row_items: sourceClone };\n      let dest_new_obj = { ...destination, row_items: destClone };\n      console.log('move :: source_new_obj', source_new_obj);\n      console.log('move :: dest_new_obj', dest_new_obj);\n      result.source = source_new_obj;\n      result.dest = dest_new_obj;\n      console.log('move :: dest_new_obj :: result', result);\n      return result;\n\n    } catch (e) {\n      console.log('move ::  exception', e);\n    }\n  };\n\n\n  render() {\n    console.log('itemList :: render', this.state.itemList);\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        {this.state.itemList.map((item, index) => (\n          <Droppable droppableId={item.draggable_id} direction=\"horizontal\" key={item.draggable_id}>\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={getFirstListStyle(snapshot.isDraggingOver)}\n                {...provided.droppableProps}\n              >\n                {item.row_items.map((item_row, index) => (\n                  <Draggable key={item_row.id} draggableId={item_row.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style, item_row\n                        )}\n                      >\n                        {item_row.name}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n              </div>\n            )}\n          </Droppable>\n        ))}\n      </DragDropContext>\n    );\n  }\n}\n\nconst grid = 8;\n\nconst getFirstListStyle = (isDraggingOver) => ({\n  background: 'lightgrey',\n  display: 'flex',\n  padding: grid,\n  width: 400\n  // overflow: 'auto',\n});\n\n\nconst getItemStyle = (isDragging, draggableStyle, item) => ({\n  // userSelect: 'none',\n  borderRadius: 10,\n  height: 80,\n  width: 80,\n  padding: grid * 2,\n  marginRight: 10,\n  background: item.background_color,\n  ...draggableStyle\n});\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}